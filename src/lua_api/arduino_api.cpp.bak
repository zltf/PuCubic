#include "arduino.h"

static int scr_act(lua_State *L)
{
    lv_obj_t *ret = lv_scr_act();
    lua_pushlightuserdata(L, ret);
    return 1;
}

static int obj_set_size(lua_State *L)
{
    lv_obj_t *obj = (lv_obj_t *)lua_touserdata(L, 1);
    lua_Integer width = lua_tointeger(L, 2);
    lua_Integer height = lua_tointeger(L, 3);
    lv_obj_set_size(obj, width, height);
    return 0;
}

static int obj_set_pos(lua_State *L)
{
    lv_obj_t *obj = (lv_obj_t *)lua_touserdata(L, 1);
    lua_Integer x = lua_tointeger(L, 2);
    lua_Integer y = lua_tointeger(L, 3);
    lv_obj_set_pos(obj, x, y);
    return 0;
}

static int obj_set_style_bg_color(lua_State *L)
{
    lv_obj_t *obj = (lv_obj_t *)lua_touserdata(L, 1);
    lua_Integer color = lua_tointeger(L, 2);
    lv_obj_set_style_bg_color(obj, lv_color_hex(color), LV_STATE_DEFAULT);
    return 0;
}

static int obj_set_style_text_color(lua_State *L)
{
    lv_obj_t *obj = (lv_obj_t *)lua_touserdata(L, 1);
    lua_Integer color = lua_tointeger(L, 2);
    lv_obj_set_style_text_color(obj, lv_color_hex(color), LV_STATE_DEFAULT);
    return 0;
}

static int label_create(lua_State *L)
{
    lv_obj_t *obj = (lv_obj_t *)lua_touserdata(L, 1);
    lv_obj_t *ret = lv_label_create(obj);
    lua_pushlightuserdata(L, ret);
    return 1;
}

static int label_set_text(lua_State *L)
{
    lv_obj_t *obj = (lv_obj_t *)lua_touserdata(L, 1);
    const char *text = lua_tostring(L, 2);
    lv_label_set_text(obj, text);
    return 0;
}

static const struct luaL_Reg arduinoLib[] = {
    {NULL, NULL},
};

int luaopen_arduino(lua_State *L)
{
	luaL_newlib(L, arduinoLib);
	return 1;
}

int luaregister_arduino(lua_State *L)
{
	luaL_requiref(L, "arduino", luaopen_arduino, 1);
	lua_pop(L, 1);
	return 1;
}
